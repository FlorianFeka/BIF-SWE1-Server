using System.Collections.Generic;

namespace SocketTry.Http
{
    public static class HttpMeta
    {
        public const string VERSION = "HTTP/1.1";
        public static class Headers
        {
            public const string AUTHORIZATION = "Authorization";
            public const string USER_AGENT = "User-Agent";
            public const string CONTENT_LENGTH = "Content-Length";
            public const string CONTENT_TYPE = "Content-Type";
            public const string CONNECTION = "Connection";
            public const string SERVER = "Server";
            public const string DATE = "Date";
        }

        public static Dictionary<HttpStatus, int> StatusToCode = new Dictionary<HttpStatus, int>()
        {
            {HttpStatus.Continue,100},
            {HttpStatus.Switching_Protocols,101},
            {HttpStatus.Processing,102},
            {HttpStatus.OK,200},
            {HttpStatus.Created,201},
            {HttpStatus.Accepted,202},
            {HttpStatus.Non__authoritative_Information,203},
            {HttpStatus.No_Content,204},
            {HttpStatus.Reset_Content,205},
            {HttpStatus.Partial_Content,206},
            {HttpStatus.Multi__Status,207},
            {HttpStatus.Already_Reported,208},
            {HttpStatus.IM_Used,226},
            {HttpStatus.Multiple_Choices,300},
            {HttpStatus.Moved_Permanently,301},
            {HttpStatus.Found,302},
            {HttpStatus.See_Other,303},
            {HttpStatus.Not_Modified,304},
            {HttpStatus.Use_Proxy,305},
            {HttpStatus.Temporary_Redirect,307},
            {HttpStatus.Permanent_Redirect,308},
            {HttpStatus.Bad_Request,400},
            {HttpStatus.Unauthorized,401},
            {HttpStatus.Payment_Required,402},
            {HttpStatus.Forbidden,403},
            {HttpStatus.Not_Found,404},
            {HttpStatus.Method_Not_Allowed,405},
            {HttpStatus.Not_Acceptable,406},
            {HttpStatus.Proxy_Authentication_Required,407},
            {HttpStatus.Request_Timeout,408},
            {HttpStatus.Conflict,409},
            {HttpStatus.Gone,410},
            {HttpStatus.Length_Required,411},
            {HttpStatus.Precondition_Failed,412},
            {HttpStatus.Payload_Too_Large,413},
            {HttpStatus.Request__URI_Too_Long,414},
            {HttpStatus.Unsupported_Media_Type,415},
            {HttpStatus.Requested_Range_Not_Satisfiable,416},
            {HttpStatus.Expectation_Failed,417},
            {HttpStatus.I___m_a_teapot,418},
            {HttpStatus.Misdirected_Request,421},
            {HttpStatus.Unprocessable_Entity,422},
            {HttpStatus.Locked,423},
            {HttpStatus.Failed_Dependency,424},
            {HttpStatus.Upgrade_Required,426},
            {HttpStatus.Precondition_Required,428},
            {HttpStatus.Too_Many_Requests,429},
            {HttpStatus.Request_Header_Fields_Too_Large,431},
            {HttpStatus.Connection_Closed_Without_Response,444},
            {HttpStatus.Unavailable_For_Legal_Reasons,451},
            {HttpStatus.Client_Closed_Request,499},
            {HttpStatus.Internal_Server_Error,500},
            {HttpStatus.Not_Implemented,501},
            {HttpStatus.Bad_Gateway,502},
            {HttpStatus.Service_Unavailable,503},
            {HttpStatus.Gateway_Timeout,504},
            {HttpStatus.HTTP_Version_Not_Supported,505},
            {HttpStatus.Variant_Also_Negotiates,506},
            {HttpStatus.Insufficient_Storage,507},
            {HttpStatus.Loop_Detected,508},
            {HttpStatus.Not_Extended,510},
            {HttpStatus.Network_Authentication_Required,511},
            {HttpStatus.Network_Connect_Timeout_Error,599},
        };

        public static Dictionary<int, string> CodeToStatus = new Dictionary<int, string>()
        {
            { 100, "Continue"},
            { 101, "Switching Protocols"},
            { 102, "Processing"},
            { 200, "OK"},
            { 201, "Created"},
            { 202, "Accepted"},
            { 203, "Non-authoritative Information"},
            { 204, "No Content"},
            { 205, "Reset Content"},
            { 206, "Partial Content"},
            { 207, "Multi-Status"},
            { 208, "Already Reported"},
            { 226, "IM Used"},
            { 300, "Multiple Choices"},
            { 301, "Moved Permanently"},
            { 302, "Found"},
            { 303, "See Other"},
            { 304, "Not Modified"},
            { 305, "Use Proxy"},
            { 307, "Temporary Redirect"},
            { 308, "Permanent Redirect"},
            { 400, "Bad Request"},
            { 401, "Unauthorized"},
            { 402, "Payment Required"},
            { 403, "Forbidden"},
            { 404, "Not Found"},
            { 405, "Method Not Allowed"},
            { 406, "Not Acceptable"},
            { 407, "Proxy Authentication Required"},
            { 408, "Request Timeout"},
            { 409, "Conflict"},
            { 410, "Gone"},
            { 411, "Length Required"},
            { 412, "Precondition Failed"},
            { 413, "Payload Too Large"},
            { 414, "Request-URI Too Long"},
            { 415, "Unsupported Media Type"},
            { 416, "Requested Range Not Satisfiable"},
            { 417, "Expectation Failed"},
            { 418, "I'm a teapot"},
            { 421, "Misdirected Request"},
            { 422, "Unprocessable Entity"},
            { 423, "Locked"},
            { 424, "Failed Dependency"},
            { 426, "Upgrade Required"},
            { 428, "Precondition Required"},
            { 429, "Too Many Requests"},
            { 431, "Request Header Fields Too Large"},
            { 444, "Connection Closed Without Response"},
            { 451, "Unavailable For Legal Reasons"},
            { 499, "Client Closed Request"},
            { 500, "Internal Server Error"},
            { 501, "Not Implemented"},
            { 502, "Bad Gateway"},
            { 503, "Service Unavailable"},
            { 504, "Gateway Timeout"},
            { 505, "HTTP Version Not Supported"},
            { 506, "Variant Also Negotiates"},
            { 507, "Insufficient Storage"},
            { 508, "Loop Detected"},
            { 510, "Not Extended"},
            { 511, "Network Authentication Required"},
            { 599, "Network Connect Timeout Error"},
        };
    }
}
